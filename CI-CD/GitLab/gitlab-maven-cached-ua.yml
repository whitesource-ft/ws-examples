# add APIKEY and USERKEY as an environment variable - https://gitlab.com/help/ci/variables/README
default:
  image: maven:3.8-openjdk-11

stages:
  - build
  - scan

maven_build:
  image: maven:3.8.4-eclipse-temurin-17-alpine
  stage: build
  script: "mvn clean install -DskipTests"
  tags: 
  - docker-runner

cache:
  key: "cache-$MVN_PKG-$CI_PIPELINE_ID"
  paths:
  - ${CI_PROJECT_DIR}/

ws_scan:
  stage: scan
  cache:
    key: WhiteSource
    paths: 
      - ./wss-unified-agent.jar
  variables:
    WS_APIKEY: $API_KEY
    WS_USERKEY: $USER_KEY
    WS_MAVEN_AGGREGATEMODULES: true
    WS_WSS_URL: "https://saas.whitesourcesoftware.com/agent"
    WS_PRODUCTNAME: $CI_PROJECT_NAME
    WS_PROJECTNAME: $CI_COMMIT_REF_NAME
  script: |
    echo "Checking for the newer versions for WhiteSource Unified Agent"
    res="$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/whitesource/unified-agent-distribution/releases")"
    latestRelease="$(echo "$res" | jq -s '.[] | sort_by(.published_at) | last')"
    latestVer="$(echo "$latestRelease" | jq -rs '.[] | .tag_name')"
    latestVerDate="$(date -d "$(echo "$latestRelease" | jq -rs '.[] | .published_at')" +%s)"
    curVerDate="$(stat -c %Y "${CI_PROJECT_DIR}/wss-unified-agent.jar" 2>/dev/null)"
    [ $? -gt 0 ] && curVerDate=0
    if [ $latestVerDate -gt $curVerDate ] ; then
        echo "Downloading WhiteSource Unified Agent latest version ($latestVer)"
        curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
    else
        echo "Already using the latest version of the WhiteSource Unified Agent"
    fi

    echo "WhiteSource Scan"
    java -jar ./wss-unified-agent.jar
   tags:
    - docker-runner
