default:
  image: timbru31/java-node:latest

stages:
  - build
  - test
  - deploy

before_script:
  - NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")
  - NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")
  - NPM_PKG="$NPM_PACKAGE_NAME@$NPM_PACKAGE_VERSION"
  - NPM_APP_ENTRY_POINT=$(node -p "require('./package.json').main")
  - NPM_IS_PRIVATE=$(node -p "require('./package.json').private")

cache:
  key: "cache-$NPM_PKG-$CI_PIPELINE_ID"
  paths:
  - ${CI_PROJECT_DIR}/

npm_build:
  stage: build
  script:
    - echo "CI_PROJECT_DIR - $CI_PROJECT_DIR"
    - echo "Package - $NPM_PKG"
    - |
      if [ -f "./package-lock.json" ] ; then
        npm install
      else
        npm install --package-lock
      fi
  tags:
    - docker-runner

ws_scan:
  stage: test
  variables:
    WS_DownloadUrl: "https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar"
    WS_APIKEY: "APIKEY FROM WS UI"
    WS_WSS_URL: "https://saas-eu.whitesourcesoftware.com/agent"
    WS_PRODUCTNAME: "$CI_PROJECT_NAME"
    WS_PROJECTNAME: "$CI_COMMIT_REF_NAME"
    WS_RESOLVEALLDEPENDENCIES: "false"
    WS_NPM_RESOLVEDEPENDENCIES: "true"
  script:
    - WS_UA_JAR="$(basename $WS_DownloadUrl)"
    - echo "Downloading WhiteSource Unified Agent ($WS_UA_JAR)"
    - curl -L "$WS_DownloadUrl" -o "$WS_UA_JAR"
    - |
      [ ! -f "$WS_UA_JAR" ] && echo "$WS_UA_JAR not found!" && exit 1
    - echo "WhiteSource Scan"
    - echo "Scanned directory - $CI_PROJECT_DIR"
    - java -jar $WS_UA_JAR
  tags:
    - docker-runner
